Keith Packard (HPE)

- shout out to oneRNG (talk at linux.conf.au a few years ago)

- randomness is hard, but necessary
  - crypto, neural net training, simulations, etc.

- very hard to tell if data is truly random or not
  - feed Pi to randomness checker... most will say it's random.

- one time pads in WWII were generated by people typing on
  typewriters
  - hands get tired -> less random -> cracked! (for real)

sources of entropy (that have really been used)

- decay of radionucleotides
- radio waves
- lava lamp
- fish tank

source of entropy uesd in ChaosKey

- reverse load a PN diode
- measure leakage

basic ChaosKey plan:

- noise source -> SoC -> USB to Host
- why SoC?  Do the USB part without custom hardware
- software development mantras (e.g. "release early, release often")
  don't carry across to hardware development

first hardware plan

- Hardware
  - 3.3V supply
  - Zener noise source
  - amplifier and comparator
  - SoC SPI input
  - SoC USB output
  - USB
- Never worked.

First SoC

- ARM 32-bit
- 4KB RAM
- 32KB flash
- 3.3V
- USB
- UART
- ADC
- DMA engine
- debug port
  - connect to GDB, source-level debugging
- $1.30
- need external crystal (12MHz)
  - takes a lot of board space and costs money ($0.50)
- 10LOC to drive UART
- 200LOC to drive USB
- 5mm sq.

Noise source design

- two op-amps to amplify the hell out of diode noies
- still barely detectable on oscilloscope
  - suspected it was mostly thermal

Firmware design

- has self-test to make sure randomess is working
- does not turn on the USB until it passes self-test
  - if it doesn't appear, it's cactus

Second SoC

- USB gives you 1kHz pulse
  - slave 48kHz internal clock to the USB; no crystal required!
- 7mm sq
- leads stick out the side
  - bigger, but hey at least I can hand-solder it!

Second noise source design

- started with OneRNG design
  - there are ~50 projects that use same design, or variant thereof
- 100kBits/s of randomness
  - but I want MORE!  target: 100MB/s
- worked pretty well
- need high voltage power supply
  - 20V, 10Î¼H inductor (physically huge)

Second board

- connect spy to raw noise source output to see what it's doing in
  analogue domain
- noise source didn't have enough bandwidth and wasn't as loud as
  desired
- next iteration: make it cheaper!

Third board

- wired it up completely wrong, whups!

Finding a box

- bare board connected to machine is not great
- boxes are really hard to find!
  - you can find surplus boxes of failed projects on alibaba in
    smallish qtys (100s, 1000s)
- new age enclosures

Fourth board

- wired it up completely wrong, again, whups!

Transistor amplifiers are hard

- switched from transistor to op-amp

Third noise source design:

- similar to v2, but with op-amps.
- 2V peak to peak output (cf 200mA for v2)

Fifth board:

- proper USB connector

Third soc:

- minified version of v2

Second box:

- translucent plastic, $0.50 more
  - worth it
- when you're building a product, make sure you pay yourself for the
  time it takes you to build it

Sixth board:

- wired it up completely wrong, again, whups!

Seventh board:

- made a whole bunch of these (by hand)
- sent to ppl to analyse

Production

- find a facility
  - "seeed studio"
- minor changes to be able to snap boards apart instead of cut
- components too close to edge
- no substantive changes
- fits in the box!
- the label... is a standard return-address label.  custom labels
  are really expensive!
